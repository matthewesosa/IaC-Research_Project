Description: This template describes the database, its security group and subnet groups.

Parameters:
  ProjectName:
    Description: the project name that will be at prefix of all defined resources.
    Type: String
  username:
    Description: db username
    Type: String 
  password:
    Description: db password
    Type: String  


Resources:

  dbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow all traffic to the db
      VpcId:
        Fn::ImportValue: !Sub "${ProjectName}-VPCID"
      SecurityGroupIngress: #Defining inbound traffic, protocol and ports
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0
          #SourceSecurityGroupId: !Ref webServerSecurityGroup


  dbSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties: 
      DBSubnetGroupDescription: "Subnet group for RDS"
      DBSubnetGroupName: "Subnet Group"
      SubnetIds:
        - Fn::ImportValue: !Sub '${ProjectName}-PRIV-SUBNET-AZ-a'
        - Fn::ImportValue: !Sub '${ProjectName}-PRIV-SUBNET-AZ-b'

  mydb: 
    Type: "AWS::RDS::DBInstance"
    Properties: 
      VPCSecurityGroups:
        - Ref: dbSecurityGroup
      PubliclyAccessible: false
      MultiAZ: true
      AllocatedStorage: 10
      DBInstanceClass: db.t2.small
      Engine: "mysql"
      #DBName: "test"
      MasterUsername: !Sub "${username}"
      MasterUserPassword: !Sub "${password}"
      DBSubnetGroupName: !Ref dbSubnetGroup
      Tags: 
        - 
          Key: "Name"
          Value: !Sub "${ProjectName} MySQL RDS"
#    DeletionPolicy: "Retain"


Outputs:
  dbInstanceEndpoint:
    Description: "Endpoint of the Mysql db Instance"
    Value: !GetAtt mydb.Endpoint.Address
    Export:
      Name: !Sub ${ProjectName}-mydb-Endpoint